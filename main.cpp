#include <iostream>
#include"Reading/ReadingModule.h"
#include "Reading/Lexer.h"
#include "Machine/Executor.h"

int main() {
    std::vector<BYTE> testProgram = {

            0x1C, 0x0, 0x0, 0x0, 0x1,

            0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,

            0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x3,

            0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3,

            0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19,

            0x4, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19,

            0x8, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0,

            0x15, 0x0, 0x0, 0x0, 0x2,

            0x1B, 0x0, 0x0, 0x0, 0x0,

            0x1B, 0x0, 0x0, 0x0, 0x1,

            0x1B, 0x0, 0x0, 0x0, 0x2,

            0x1D, 0x0, 0x0, 0x0, 0x1,



            0x1C, 0x0, 0x0, 0x0, 0x2,

            0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,

            0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x3,

            0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3,

            0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2,

            0x4, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2,

            0x8, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0,

            0x15, 0x0, 0x0, 0x0, 0x2,

            0x1B, 0x0, 0x0, 0x0, 0x0,

            0x1B, 0x0, 0x0, 0x0, 0x1,

            0x16, 0x0, 0x0, 0x0, 0x2,

            0x1D, 0x0, 0x0, 0x0, 0x2,



            0x1f,

            0x17, 0x0, 0x0, 0x0, 0x1,

            0x20
    };
    VM::READING::Lexer lexer = VM::READING::Lexer(testProgram);
    std::cout << "Code:" << "\n";
    lexer.printCommands();
    VM::MACHINE::Executor executor = VM::MACHINE::Executor();
    executor.init(lexer.getCommands());
    std::cout << "\nResult: ";
    executor.run();
}
